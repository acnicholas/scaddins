<UserControl
              xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
              x:Class="SCaddins.SheetCopier.Views.SheetCopierView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:sheetCopier="clr-namespace:SCaddins.SheetCopier"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="300*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <ui:CardExpander ExpandDirection="Right" Height="Auto" HorizontalAlignment="Stretch" Icon="">
                <ui:CardExpander.Header>
                    <ui:TextBlock Text="Source Sheet Information">
                        <ui:TextBlock.LayoutTransform>
                            <RotateTransform Angle="-90"/>
                        </ui:TextBlock.LayoutTransform>
                    </ui:TextBlock>
                </ui:CardExpander.Header>
                <Grid MinWidth="200" VerticalAlignment="Stretch" Height="Auto" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Margin="5" x:Name="SelectedSheetName"></Label>
                    <ListView x:Name="SelectedSheetInformationView" Grid.Row="1" Margin="5" MaxWidth="300" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Height="Auto">
                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn Header="Parameter" DisplayMemberBinding="{Binding ParameterName}"></GridViewColumn>
                                    <GridViewColumn Header="Info" DisplayMemberBinding="{Binding ParameterValue}"></GridViewColumn>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                                        <TextBlock FontWeight="Bold" Text="{Binding Items[0].IndexTypeDescription}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>

                    </ListView>
                </Grid>
            </ui:CardExpander>
        </Grid>
        <GridSplitter Grid.Row="0" Grid.Column="1" Height="Auto" Width="Auto"></GridSplitter>
        <Grid Grid.Row="0" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="150*"></RowDefinition>
                <RowDefinition Height="5"></RowDefinition>
                <RowDefinition Height="100*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label  Grid.Column="0" Margin="5">New Sheets</Label>
                    <ui:Button x:Name="RemoveSheetSelection" IsEnabled="{Binding RemoveSheetSelectionIsEnabled}" Grid.Column="1" Margin="5">Remove Selection</ui:Button>
                    <ui:Button x:Name="CopySheetSelection" Grid.Column="2" IsEnabled="{Binding CopySheetSelectionIsEnabled}" Margin="5">Copy</ui:Button>
                    <ui:Button x:Name="AddCurrentView" IsEnabled="{Binding AddCurrentSheetIsEnabled}" Content="{Binding AddCurrentSheetLabel}"  Grid.Column="3" Margin="5"></ui:Button>
                    <!--<Button x:Name="AddViews" Grid.Column="4" Margin="5">Select Views</Button>-->
                    <ui:Button x:Name="AddSheets" Grid.Column="5" Margin="5">Add Views</ui:Button>
                </Grid>
                <FrameworkElement Grid.Row="1" x:Name="Dummy" Visibility="Collapsed"/>
                <ui:DataGrid
                    x:Name="ViewHosts"
                    AutoGenerateColumns="False"
                    Grid.Row="1"
                    Margin="5"
                    SelectionMode="Single"
                    VirtualizingStackPanel.VirtualizationMode="Standard"
                    cal:Message.Attach="[Event SelectionChanged] = [RowSheetSelectionChanged($eventArgs)]"
                    GridLinesVisibility="Vertical">

                    <ui:DataGrid.Resources>
                        <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}"/>-->
                        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
                            <Setter Property="Margin" Value="1,1,1,1" />
                        </Style>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="DataGridCell.IsSelected" Value="True">
                                    <Setter Property="Background" Value="#cccccc"/>
                                    <Setter Property="BorderBrush" Value="#333333" />
                                    <Setter Property="Foreground" Value="#333333" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ui:DataGrid.Resources>

                    <ui:DataGrid.AlternatingRowBackground>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
                    </ui:DataGrid.AlternatingRowBackground>

                    <ui:DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
                            </Style.Resources>
                        </Style>
                    </ui:DataGrid.RowStyle>

                    <ui:DataGrid.Columns>
                        <DataGridTextColumn Header="Sheet Number" Binding="{Binding Number}" MinWidth="100"></DataGridTextColumn>
                        <DataGridTextColumn Header="Sheet Name" Binding="{Binding Title}" Width="*"></DataGridTextColumn>
                        <DataGridTemplateColumn 
                                 Header="{Binding DataContext.PrimaryCustomSheetParameterColumnHeader,Source={x:Reference Dummy}}"
                                 Visibility="{Binding DataContext.CustomSheetParameterOneIsVisible,Converter={StaticResource BoolToVis},Source={x:Reference Dummy}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="sheetCopier:SheetCopierViewHost">
                                    <ComboBox  Background="Transparent"
                                               IsEditable="True"
                                               IsEnabled="{Binding IsSheet}"
                                               Text="{Binding PrimaryCustomSheetParameter, UpdateSourceTrigger=LostFocus}"
                                               ItemsSource="{Binding PrimaryCustomSheetParameters}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn
                                 Header="{Binding DataContext.SecondaryCustomSheetParameterColumnHeader,Source={x:Reference Dummy}}"
                                 Visibility="{Binding DataContext.CustomSheetParameterTwoIsVisible,Converter={StaticResource BoolToVis},Source={x:Reference Dummy}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="sheetCopier:SheetCopierViewHost">
                                    <ComboBox  Background="Transparent"
                                               IsEditable="True"
                                               IsEnabled="{Binding IsSheet}"
                                               Text="{Binding SecondaryCustomSheetParameter, UpdateSourceTrigger=LostFocus}"
                                               ItemsSource="{Binding SecondaryCustomSheetParameters}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn
                                 Header="{Binding DataContext.TertiaryCustomSheetParameterColumnHeader,Source={x:Reference Dummy}}"
                                 Visibility="{Binding DataContext.CustomSheetParameterThreeIsVisible,Converter={StaticResource BoolToVis},Source={x:Reference Dummy}}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="sheetCopier:SheetCopierViewHost">
                                    <ComboBox  Background="Transparent"
                                               IsEditable="True"
                                               IsEnabled="{Binding IsSheet}"
                                               Text="{Binding TertiaryCustomSheetParameter, UpdateSourceTrigger=LostFocus}"
                                               ItemsSource="{Binding TertiaryCustomSheetParameters}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </ui:DataGrid.Columns>
                </ui:DataGrid>
            </Grid>
            <GridSplitter Grid.Row="1" Height="5" Width="Auto"  HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"></GridSplitter>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label  x:Name="ChildViewsTitleLabel" Grid.Column="0"></Label>
                    <Button x:Name="RemoveSelectedViews" IsEnabled="{Binding RemoveSelectedViewsIsEnabled}" Content="{Binding RemoveViewsLabel}" Grid.Column="1" Margin="5"></Button>
                </Grid>
                <ui:DataGrid
                    x:Name="ChildViews"
                    AutoGenerateColumns="False"
                    Grid.Row="1"
                    VirtualizingStackPanel.VirtualizationMode="Standard"
                    GridLinesVisibility="None"
                    cal:Message.Attach="[Event SelectionChanged] = [ChildViewsRowSelectionChanged($eventArgs)]"
                    Margin="5">
                    <DataGrid.AlternatingRowBackground>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                    </DataGrid.AlternatingRowBackground>
                    <ui:DataGrid.Columns>
                        <DataGridTextColumn Header="Original Title" Binding="{Binding OriginalTitle, Mode=OneWay}"  MinWidth="75"></DataGridTextColumn>
                        <DataGridTextColumn Header="Proposed Title" Binding="{Binding Title}"  MinWidth="75"></DataGridTextColumn>
                        <DataGridComboBoxColumn
                            SelectedItemBinding="{Binding ViewTemplateName}"
                            Header="View Template"
                            MinWidth="75">
                            <DataGridComboBoxColumn.ElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ItemsSource" Value="{Binding AvailableViewTemplates}"/>
                                    <Setter Property="IsReadOnly" Value="True"/>
                                </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ItemsSource" Value="{Binding AvailableViewTemplates}"/>
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>
                        <DataGridComboBoxColumn
                            SelectedItemBinding="{Binding AssociatedLevelName}"
                            Header="Associated Level"
                            MinWidth="75">
                            <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding LevelsInModel}"/>
                                <Setter Property="IsReadOnly" Value="True"/>
                            </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="ComboBox">
                                    <Setter Property="ItemsSource" Value="{Binding LevelsInModel}"/>
                                    <Setter Property="IsEnabled" Value="{Binding AssociatedLevelNameIsEnabled}"/>
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>
                        <DataGridTextColumn Header="View Type" MinWidth="75" Binding="{Binding RevitViewType, Mode=OneWay}"></DataGridTextColumn>
                        <DataGridCheckBoxColumn Header="Copy Detailing" Binding="{Binding DuplicateWithDetailing}" Width="*"></DataGridCheckBoxColumn>
                    </ui:DataGrid.Columns>
                </ui:DataGrid>
            </Grid>
        </Grid>
        <ui:Button Appearance="Primary" Icon="{ui:SymbolIcon CopyArrowRight20}" x:Name="Go" Content="{Binding GoLabel}" IsEnabled="{Binding GoLabelIsEnabled}"   Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" MinWidth="50" Margin="5"></ui:Button>
    </Grid>
</UserControl>
