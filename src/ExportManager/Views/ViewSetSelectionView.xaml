<UserControl x:Class="SCaddins.ExportManager.Views.ViewSetSelectionView"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ui:DataGrid x:Name="Sets"
                  Grid.Row="0"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  AutoGenerateColumns="False"
                  SelectionMode="Single"
                  VirtualizingStackPanel.VirtualizationMode="Standard"
                  cal:Message.Attach="[Event MouseDoubleClick] = [RowDoubleClicked()]"
                  Margin="5">
            <ui:DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}"/>
                <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
                    <Setter Property="Margin" Value="1,1,1,1" />
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="Background" Value="#333333"/>
                            <Setter Property="BorderBrush" Value="#333333" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ui:DataGrid.Resources>

            <ui:DataGrid.AlternatingRowBackground>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"/>
            </ui:DataGrid.AlternatingRowBackground>

            <ui:DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
                    </Style.Resources>
                </Style>
            </ui:DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True"></DataGridTextColumn>
                <DataGridTextColumn Header="Sheet Count" Binding="{Binding NumberOfViews}" IsReadOnly="True"></DataGridTextColumn>
            </DataGrid.Columns>
        </ui:DataGrid>
        <ui:Button x:Name="Cancel" Grid.Row="1" Grid.Column="0" Margin="5" HorizontalAlignment="Left" MinWidth="50" IsCancel="True">Cancel</ui:Button>
        <ui:Button 
            x:Name="OK"
            IsEnabled="{Binding OKEnabled}"
            Grid.Row="1"
            Grid.Column="1"
            Margin="5"
            HorizontalAlignment="Right"
            MinWidth="50"
            Appearance="Primary"
            IsDefault="True">OK
        </ui:Button>
    </Grid>
</UserControl>
